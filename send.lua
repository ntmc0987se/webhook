--[[ 
_G.WebhookURL = "" 
_G.Time = 300
]]
local HttpService = game:GetService("HttpService")

local webhookURL = _G.WebhookURL
local players = game:GetService("Players")
local replicatedStorage = game:GetService("ReplicatedStorage")
local nguoiChoi = players.LocalPlayer

-- H√†m l·∫•y s·ªë l∆∞·ª£ng v·∫≠t ph·∫©m, ƒë√£ s·ª≠a l·∫°i c√°ch duy·ªát kho ƒë·ªì
local function laySoLuongVatPham(tenVatPham)
    -- S·ª≠ d·ª•ng WaitForChild ƒë·ªÉ ƒë·∫£m b·∫£o th∆∞ m·ª•c Remotes ƒë√£ ƒë∆∞·ª£c t·∫£i xong
    local remotesFolder = replicatedStorage:WaitForChild("Remotes", 5)

    if not remotesFolder then
        warn("L·ªói: Kh√¥ng t√¨m th·∫•y th∆∞ m·ª•c 'Remotes' trong ReplicatedStorage sau 5 gi√¢y!")
        return 0
    end

    local remote = remotesFolder:FindFirstChild("CommF_")
    if not remote then
        warn("L·ªói: Kh√¥ng t√¨m th·∫•y RemoteFunction 'CommF_' b√™n trong th∆∞ m·ª•c Remotes!")
        return 0
    end

    local thanhCong, khoDo = pcall(function()
        return remote:InvokeServer("getInventory")
    end)

    if not thanhCong or type(khoDo) ~= "table" then
        warn("L·ªói: Kh√¥ng th·ªÉ l·∫•y kho ƒë·ªì t·ª´ m√°y ch·ªß ho·∫∑c d·ªØ li·ªáu tr·∫£ v·ªÅ kh√¥ng ph·∫£i l√† m·ªôt b·∫£ng.")
        return 0
    end

    -- Duy·ªát qua b·∫£ng kho ƒë·ªì ƒë·ªÉ t√¨m v·∫≠t ph·∫©m theo t√™n
    for _, vatPham in pairs(khoDo) do
        -- Ki·ªÉm tra xem c√≥ ƒë√∫ng t√™n v·∫≠t ph·∫©m v√† c√≥ thu·ªôc t√≠nh 'Count' kh√¥ng
        if vatPham.Name and vatPham.Name == tenVatPham and vatPham.Count then
            return vatPham.Count
        end
    end
    
    -- N·∫øu kh√¥ng t√¨m th·∫•y v·∫≠t ph·∫©m trong v√≤ng l·∫∑p, tr·∫£ v·ªÅ 0
    return 0
end

-- H√†m g·ª≠i tin nh·∫Øn t·ªõi Discord
local function sendToDiscord()
    -- L·∫•y d·ªØ li·ªáu t·ª´ game
    local uiText1 = nguoiChoi.PlayerGui.Main.Beli.Text
    local uiText2 = nguoiChoi.PlayerGui.Main.Fragments.Text
    local uiText3 = tostring(laySoLuongVatPham("Summer Token"))
    local uiText4 = tostring(laySoLuongVatPham("Oni Token"))

    -- D·ªØ li·ªáu payload cho Discord embed
    local data = {
        ["embeds"] = {
            {
                ["title"] = "üìä Status",
                ["description"] = "Th√¥ng tin t√†i nguy√™n c·ªßa ng∆∞·ªùi ch∆°i.",
                ["color"] = 15258703,
                ["fields"] = {
                    {
                        ["name"] = "Beli",
                        ["value"] = uiText1,
                        ["inline"] = true
                    },
                    {
                        ["name"] = "Fragments",
                        ["value"] = uiText2,
                        ["inline"] = true
                    },
                    {
                        ["name"] = "Summer Token",
                        ["value"] = uiText3,
                        ["inline"] = true
                    },
                    {
                        ["name"] = "Oni Token",
                        ["value"] = uiText4,
                        ["inline"] = true
                    }
                },
                ["footer"] = {
                    ["text"] = "G·ª≠i l√∫c: " .. os.date("%H:%M:%S ng√†y %d/%m/%Y")
                }
            }
        }
    }

    -- 1. Chuy·ªÉn ƒë·ªïi b·∫£ng Lua th√†nh chu·ªói JSON
    local jsonData
    local success, err = pcall(function()
    	jsonData = HttpService:JSONEncode(data)
    end)
    
    if not success then
    	warn("L·ªói khi m√£ h√≥a JSON: ", err)
    	return
    end

    -- 2. G·ª≠i y√™u c·∫ßu HTTP POST v·ªõi d·ªØ li·ªáu JSON
    local success, response = pcall(function()
        HttpService:RequestAsync({
            Url = webhookURL,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = jsonData
        })
    end)
    
    if success then
        print("ƒê√£ g·ª≠i th√¥ng b√°o webhook th√†nh c√¥ng!")
    else
        warn("G·ª≠i webhook th·∫•t b·∫°i: ", response)
    end
end

-- V√≤ng l·∫∑p ƒë·ªÉ g·ª≠i th√¥ng b√°o ƒë·ªãnh k·ª≥
while true do
    -- G·ªçi h√†m ƒë·ªÉ g·ª≠i th√¥ng tin
    sendToDiscord()
    wait(_G.Time)
end

